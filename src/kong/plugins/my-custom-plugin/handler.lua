---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 叶子.
--- DateTime: 2020/8/31 0:00
---

local BasePlugin = require "kong.plugins.base_plugin"
local CustomHandler = BasePlugin:extend()

local access = require "kong.plugins.my-custom-plugin.access"

CustomHandler.PRIORITY = 10

function CustomHandler:new()
    CustomHandler.super.new(self, "my-custom-plugin")
end

function CustomHandler:init_worker()
    -- 每个 Nginx worker 进程启动时执行
    CustomHandler.super.init_worker(self)
end

function CustomHandler:preread(config)
    -- 每个连接执行一次
    CustomHandler.super.preread(self)
end

function CustomHandler:certificate(config)
    -- 在 SSL 握手提供证书时执行
    CustomHandler.super.certificate(self)
end

function CustomHandler:rewrite(config)
    -- 从客户端接收到请求，进入 rewrite 段执行，
    -- 注意，在这个阶段没有识别服务，也没有消费者介入，只有配置成全局插件才会执行此处理程序
    CustomHandler.super.rewrite(self)
end

function CustomHandler:access(config)
    -- 从客户端接收到请求到被代理到 upstream service 之前执行
    CustomHandler.super.access(self)
    access(config)
end

function CustomHandler:header_filter(config)
    -- 从 upstream service 接收到所有响应头时执行
    CustomHandler.super.header_filter(self)
end

function CustomHandler:body_filter(config)
    -- 针对从 upstream service 接收到的响应体块执行，
    -- 由于响应以流的形式返回给客户端，超过缓冲区大小的按块进行传输，
    -- 因此，如果响应体很大，会多次调用这个方法
    CustomHandler.super.body_filter(self)
end

function CustomHandler:log(config)
    -- 最后一个响应字节发送到客户端时执行
    CustomHandler.super.log(self)
end

return CustomHandler
